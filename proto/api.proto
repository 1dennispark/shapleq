syntax = "proto3";
package paustq.proto;
import "data.proto";
import "google/protobuf/any.proto";

service TopicService {
    rpc CreateTopic(CreateTopicRequest) returns (CreateTopicResponse) {}
    rpc DeleteTopic(DeleteTopicRequest) returns (DeleteTopicResponse) {}
    rpc DescribeTopic(DescribeTopicRequest) returns (DescribeTopicResponse) {}
    rpc ListTopics(ListTopicsRequest) returns (ListTopicsResponse) {}
}

service PartitionService {
    rpc CreatePartition(CreatePartitionRequest) returns (CreatePartitionResponse) {}
}

service ConnectionService {
    rpc SendHeartbeat(HeartBeatRequest) returns (HeartBeatResponse) {}
    rpc Connect(ConnectRequest) returns (ConnectResponse) {}
    rpc ShutdownBroker(ShutdownBrokerRequest) returns (ShutdownBrokerResponse) {}
}

service ConfigService {
    rpc SetConfig(SetConfigRequest) returns (SetConfigResponse) {}
    rpc AlterConfig(AlterConfigRequest) returns (AlterConfigResponse) {}
    rpc ShowConfig(ShowConfigRequest) returns (ShowConfigResponse) {}
}

service GroupService {
    rpc JoinGroup(JoinGroupRequest) returns (JoinGroupResponse) {}
    rpc LeaveGroup(LeaveGroupRequest) returns (LeaveGroupResponse) {}
    rpc CreateGroup(CreateGroupRequest) returns (CreateGroupResponse) {}
    rpc ListGroups(ListGroupsRequest) returns (ListGroupsResponse) {}
    rpc DeleteGroup(DeleteGroupRequest) returns (DeleteGroupResponse) {}
}

service PubSubService {
    rpc FlowStream(stream PubSubRequest) returns (stream PubSubResponse) {}
}

// Config
message SetConfigRequest {
    int32 magic = 1;
    bytes config = 2;
}

message SetConfigResponse {
    int32 magic = 1;
    bytes config = 2;
    int32 error_code = 3;
}

message AlterConfigRequest {
    int32 magic = 1;
    bytes config = 2;
}

message AlterConfigResponse {
    int32 magic = 1;
    bytes config = 2;
    int32 error_code = 3;
}

message ShowConfigRequest {
    int32 magic = 1;
}

message ShowConfigResponse {
    int32 magic = 1;
    bytes config = 2;
    int32 error_code = 3;
}

message CreateTopicRequest {
    int32 magic = 1;
    Topic topic = 2;
}

message CreateTopicResponse {
    int32 magic = 1;
}

message DeleteTopicRequest {
    int32 magic = 1;
    string topic_name = 2;
}

message DeleteTopicResponse {
    int32 magic = 1;
}

message ListTopicsRequest {
    int32 magic = 1;
}

message ListTopicsResponse {
    int32 magic = 1;
    repeated Topic topics = 2;
}

message DescribeTopicRequest {
    int32 magic = 1;
    string topic_name = 2;
}

message DescribeTopicResponse {
    int32 magic = 1;
    TopicInfo topic_info = 2;
}

// partition
message CreatePartitionRequest {
    int32 magic = 1;
    string topic_name = 2;
    uint32 count = 3;
}

message CreatePartitionResponse {
    int32 magic = 1;
    Partition partition = 2;
}

// group
message CreateGroupRequest {
    int32 magic = 1;
    string group_name = 2;
    string description = 3;
}

message CreateGroupResponse {
    int32 magic = 1;
    Group group = 2;
}

message ListGroupsRequest {
    int32 magic = 1;
}

message ListGroupsResponse {
    int32 magic = 1;
    repeated Group group = 2;
    int32 error_code = 3;
}

// Consumer can join only one group
message JoinGroupRequest {
    int32 magic = 1;
    uint64 group_id = 2;
}

message JoinGroupResponse {
    int32 magic = 1;
    Group group = 2;
}

message LeaveGroupRequest {
    int32 magic = 1;
    uint64 group_id = 2;
}

message LeaveGroupResponse {
    int32 magic = 1;
    Group group = 2;
}

// Note:: Only group owner can delete group
message DeleteGroupRequest {
    int32 magic = 1;
    uint64 group_id = 2;
}

message DeleteGroupResponse {
    int32 magic = 1;
    Group group = 2;
}

// connection

message ConnectRequest {
    int32 magic = 1;
    SessionType session_type = 2;
    string topic_name = 3;
}

message ConnectResponse {
    int32 magic = 1;
}

message HeartBeatRequest {
    int32 magic = 1;
}

message HeartBeatResponse {
    int32 magic = 1;
    int32 error_code = 2;
}

message ShutdownBrokerRequest {
    int32 magic = 1;
    uint64 broker_id = 2;
}

message ShutdownBrokerResponse {
    int32 magic = 1;
}

// pubsub

message PubSubRequest {
    int32 magic = 1;
    google.protobuf.Any request = 2;
}

message PubSubResponse {
    int32 magic = 1;
    google.protobuf.Any response = 2;
}

message Ack {
    int32 magic = 1;
    TopicInfo info = 2;
}

message PutRequest {
    int32 magic = 1;
    bytes data = 2;
}

message PutResponse {
    int32 magic = 1;
    Partition partition = 2;
}

message FetchRequest {
    int32 magic = 1;
    uint64 start_offset = 2;
}

message FetchResponse {
    int32 magic = 1;
    bytes data = 2;
    Partition partition = 3;
    uint64 last_offset = 4;
}